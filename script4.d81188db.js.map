{"version":3,"sources":["script4.js"],"names":["RotateText","_classCallCheck","containerScrollEl","document","querySelector","containerYEl","textEl","onScrollCallback","onScroll","bind","_createClass","key","value","initObserver","addEventListener","options","root","rootMargin","threshold","window","innerHeight","clientHeight","IntersectionObserver","scrollEventObserve","observe","entries","_this","forEach","entry","isIntersecting","addScrollEvent","removeScrollEvent","removeEventListener","scrollProgress","getScrollProgress","deg","getTargetDeg","style","backgroundColor","concat","transform","containerScrollRect","getBoundingClientRect","containerScrollTop","scrollY","top","scrollRange","progress","rotateText","init"],"mappings":"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","file":"script4.d81188db.js","sourceRoot":"..\\src\\scroll_fix","sourcesContent":["class RotateText {\r\n  constructor() {\r\n    // 要素\r\n    this.containerScrollEl = document.querySelector(\r\n      \"#rotate-anim #container-scroll4\"\r\n    );\r\n    this.containerYEl = document.querySelector(\"#rotate-anim #container-y4\");\r\n    this.textEl = document.querySelector(\"#rotate-anim #rotate-text\");\r\n    // スクロール関数（removeEventListenerする目的）\r\n    // https://log.tkyisgk.com/addeventlistener-this\r\n    this.onScrollCallback = this.onScroll.bind(this);\r\n  }\r\n\r\n  /**\r\n   * 初期化\r\n   */\r\n  init() {\r\n    this.initObserver();\r\n    // リサイズ処理と再読み込みなどでページ途中で初期表示された場合の考慮\r\n    document.addEventListener(\"resize\", this.onScrollCallback);\r\n    this.onScroll();\r\n  }\r\n\r\n  /**\r\n   * インターセクションオブザーバー初期化\r\n   */\r\n  initObserver() {\r\n    // スクロール範囲がwindowを覆ったタイミングでスクロールイベントの出し分けを行う\r\n    // TODO: リサイズのタイミングでこの値も更新しないとNG?\r\n    const threshold = window.innerHeight / this.containerScrollEl.clientHeight;\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold,\r\n    };\r\n    const observer = new IntersectionObserver(\r\n      this.scrollEventObserve.bind(this),\r\n      options\r\n    );\r\n    observer.observe(this.containerScrollEl);\r\n  }\r\n\r\n  /**\r\n   * スクロールイベント監視\r\n   */\r\n  scrollEventObserve(entries) {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        this.addScrollEvent();\r\n      } else {\r\n        this.removeScrollEvent();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * スクロール処理追加\r\n   */\r\n  addScrollEvent() {\r\n    document.addEventListener(\"scroll\", this.onScrollCallback);\r\n  }\r\n\r\n  /**\r\n   * スクロール処理削除\r\n   */\r\n  removeScrollEvent() {\r\n    document.removeEventListener(\"scroll\", this.onScrollCallback);\r\n  }\r\n\r\n  /**\r\n   * スクロール処理\r\n   */\r\n  onScroll() {\r\n    // TODO: スクロール処理requestAnimationFrameで間引く\r\n    const scrollProgress = this.getScrollProgress();\r\n    const deg = this.getTargetDeg(scrollProgress);\r\n    this.textEl.style.backgroundColor = `hsl(${deg} 100% 50%)`;\r\n    this.textEl.style.transform = `rotateY(${deg}deg)`;\r\n  }\r\n\r\n  /**\r\n   * スクロール進行の割合の取得\r\n   * @returns スクロール進行の割合\r\n   */\r\n  getScrollProgress() {\r\n    // スクロール範囲の上下\r\n    const containerScrollRect = this.containerScrollEl.getBoundingClientRect();\r\n    const containerScrollTop = window.scrollY + containerScrollRect.top;\r\n    const containerScrollBottom =\r\n      containerScrollTop + this.containerScrollEl.clientHeight;\r\n    // Yコンテナの高さ\r\n    const containerYHeight = this.containerYEl.clientHeight;\r\n    // スクロール範囲\r\n    const scrollRange = {\r\n      start: containerScrollTop,\r\n      end: containerScrollBottom - containerYHeight,\r\n    };\r\n    // 現在のスクロール位置\r\n    const scrollCurrent = window.scrollY;\r\n    // スクロール進行の割合\r\n    const scrollProgress =\r\n      (scrollCurrent - scrollRange.start) /\r\n      (scrollRange.end - scrollRange.start);\r\n    return scrollProgress;\r\n  }\r\n\r\n  /**\r\n   * 目標変化角度の取得\r\n   * @param progress 進行割合\r\n   * @returns deg 目標変化角度\r\n   */\r\n  getTargetDeg(progress) {\r\n    const arrangedProgress = progress > 1 ? 1 : progress < 0 ? 0 : progress;\r\n    const deg = 360 * arrangedProgress;\r\n    return deg;\r\n  }\r\n}\r\n\r\nconst rotateText = new RotateText();\r\nrotateText.init();\r\n"]}