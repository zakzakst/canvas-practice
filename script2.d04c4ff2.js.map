{"version":3,"sources":["script2.js"],"names":["sectionEls","document","querySelectorAll","SHOW_CLASS","forEach","el","IntersectionObserver","entries","entry","targetBgSelector","target","dataset","targetBg","querySelector","isIntersecting","classList","add","boundingClientRect","top","remove","root","rootMargin","threshold","observe"],"mappings":";AAAA,IAAMA,EAAaC,SAASC,iBAAiB,eACvCC,EAAa,SAGnBH,EAAWI,QAAQ,SAACC,GAoBD,IAAIC,qBAdJ,SAACC,GAChBA,EAAQH,QAAQ,SAACI,GACf,IAAMC,EAAmBD,EAAME,OAAOC,QAAQC,SACxCA,EAAWX,SAASY,cAAcJ,GACpCD,EAAMM,eACRF,EAASG,UAAUC,IAAIb,GAEnBK,EAAMS,mBAAmBC,KAAO,GAElCN,EAASG,UAAUI,OAAOhB,MAdlB,CACdiB,KAAM,KACNC,WAAY,WACZC,UAAW,IAiBJC,QAAQlB","file":"script2.d04c4ff2.js","sourceRoot":"..\\src\\clip_path","sourcesContent":["const sectionEls = document.querySelectorAll(\".js-section\");\r\nconst SHOW_CLASS = \"--show\";\r\n\r\n// セクション背景アニメーション\r\nsectionEls.forEach((el) => {\r\n  const options = {\r\n    root: null,\r\n    rootMargin: \"-50% 0px\",\r\n    threshold: 0,\r\n  };\r\n  const callback = (entries) => {\r\n    entries.forEach((entry) => {\r\n      const targetBgSelector = entry.target.dataset.targetBg;\r\n      const targetBg = document.querySelector(targetBgSelector);\r\n      if (entry.isIntersecting) {\r\n        targetBg.classList.add(SHOW_CLASS);\r\n      } else {\r\n        if (entry.boundingClientRect.top >= 0) {\r\n          // 戻り方向に出た場合、表示クラス削除\r\n          targetBg.classList.remove(SHOW_CLASS);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const observer = new IntersectionObserver(callback, options);\r\n  observer.observe(el);\r\n});\r\n"]}