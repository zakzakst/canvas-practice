{"version":3,"sources":["script3.js"],"names":["LRItem","_classCallCheck","containerScrollEl","document","querySelector","containerYEl","itemEls","querySelectorAll","onScrollCallback","onScroll","bind","startRotate","endRotate","_createClass","key","value","initObserver","addEventListener","options","root","rootMargin","threshold","window","innerHeight","clientHeight","IntersectionObserver","scrollEventObserve","observe","entries","_this","forEach","entry","isIntersecting","addScrollEvent","removeScrollEvent","removeEventListener","_this2","scrollProgress","getScrollProgress","_toConsumableArray","item","index","style","getTargetStyle","length","opacity","transform","concat","rotate","containerScrollRect","getBoundingClientRect","containerScrollTop","scrollY","top","scrollRange","progress","itemLength","arrangedProgress","indexRange","indexProgress","sign","lRItem","init"],"mappings":"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","file":"script3.758dbf03.js","sourceRoot":"..\\src\\scroll_fix","sourcesContent":["class LRItem {\r\n  constructor() {\r\n    // 要素\r\n    this.containerScrollEl = document.querySelector(\r\n      \"#lr-anim #container-scroll3\"\r\n    );\r\n    this.containerYEl = document.querySelector(\"#lr-anim #container-y3\");\r\n    this.itemEls = document.querySelectorAll(\"#lr-anim #items3 .item3\");\r\n    // スクロール関数（removeEventListenerする目的）\r\n    // https://log.tkyisgk.com/addeventlistener-this\r\n    this.onScrollCallback = this.onScroll.bind(this);\r\n    this.startRotate = 30;\r\n    this.endRotate = 3;\r\n  }\r\n\r\n  /**\r\n   * 初期化\r\n   */\r\n  init() {\r\n    this.initObserver();\r\n    // リサイズ処理と再読み込みなどでページ途中で初期表示された場合の考慮\r\n    document.addEventListener(\"resize\", this.onScrollCallback);\r\n    this.onScroll();\r\n  }\r\n\r\n  /**\r\n   * インターセクションオブザーバー初期化\r\n   */\r\n  initObserver() {\r\n    // スクロール範囲がwindowを覆ったタイミングでスクロールイベントの出し分けを行う\r\n    // TODO: リサイズのタイミングでこの値も更新しないとNG?\r\n    const threshold = window.innerHeight / this.containerScrollEl.clientHeight;\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold,\r\n    };\r\n    const observer = new IntersectionObserver(\r\n      this.scrollEventObserve.bind(this),\r\n      options\r\n    );\r\n    observer.observe(this.containerScrollEl);\r\n  }\r\n\r\n  /**\r\n   * スクロールイベント監視\r\n   */\r\n  scrollEventObserve(entries) {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        this.addScrollEvent();\r\n      } else {\r\n        this.removeScrollEvent();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * スクロール処理追加\r\n   */\r\n  addScrollEvent() {\r\n    document.addEventListener(\"scroll\", this.onScrollCallback);\r\n  }\r\n\r\n  /**\r\n   * スクロール処理削除\r\n   */\r\n  removeScrollEvent() {\r\n    document.removeEventListener(\"scroll\", this.onScrollCallback);\r\n  }\r\n\r\n  /**\r\n   * スクロール処理\r\n   */\r\n  onScroll() {\r\n    // TODO: スクロール処理requestAnimationFrameで間引く\r\n    const scrollProgress = this.getScrollProgress();\r\n    [...this.itemEls].forEach((item, index) => {\r\n      const style = this.getTargetStyle(\r\n        scrollProgress,\r\n        this.itemEls.length,\r\n        index\r\n      );\r\n      item.querySelector(\".card\").style.opacity = style.opacity;\r\n      item.querySelector(\r\n        \".card\"\r\n      ).style.transform = `rotate(${style.rotate}deg)`;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * スクロール進行の割合の取得\r\n   * @returns スクロール進行の割合\r\n   */\r\n  getScrollProgress() {\r\n    // スクロール範囲の上下\r\n    const containerScrollRect = this.containerScrollEl.getBoundingClientRect();\r\n    const containerScrollTop = window.scrollY + containerScrollRect.top;\r\n    const containerScrollBottom =\r\n      containerScrollTop + this.containerScrollEl.clientHeight;\r\n    // Yコンテナの高さ\r\n    const containerYHeight = this.containerYEl.clientHeight;\r\n    // スクロール範囲\r\n    const scrollRange = {\r\n      start: containerScrollTop,\r\n      end: containerScrollBottom - containerYHeight,\r\n    };\r\n    // 現在のスクロール位置\r\n    const scrollCurrent = window.scrollY;\r\n    // スクロール進行の割合\r\n    const scrollProgress =\r\n      (scrollCurrent - scrollRange.start) /\r\n      (scrollRange.end - scrollRange.start);\r\n    return scrollProgress;\r\n  }\r\n\r\n  /**\r\n   * 目標変化量の取得\r\n   * @param progress 進行割合\r\n   * @param itemLength 要素の総数\r\n   * @param index 要素の番号\r\n   * @returns { opacity, rotate } 目標変化量\r\n   */\r\n  getTargetStyle(progress, itemLength, index) {\r\n    const arrangedProgress = progress >= 1 ? 1 : progress <= 0 ? 0 : progress;\r\n    const indexRange = {\r\n      start: index / itemLength,\r\n      end: (index + 1) / itemLength,\r\n    };\r\n    const indexProgress =\r\n      indexRange.start > arrangedProgress\r\n        ? 0\r\n        : indexRange.end < arrangedProgress\r\n        ? 1\r\n        : (arrangedProgress - indexRange.start) /\r\n          (indexRange.end - indexRange.start);\r\n    // 透明度\r\n    const opacity = indexProgress;\r\n    // 角度（奇数と偶数で正負を変更）\r\n    const sign = index % 2 === 0 ? 1 : -1;\r\n    const rotate =\r\n      sign * this.startRotate -\r\n      (sign * this.startRotate - sign * this.endRotate) * indexProgress;\r\n    return {\r\n      opacity,\r\n      rotate,\r\n    };\r\n  }\r\n}\r\n\r\nconst lRItem = new LRItem();\r\nlRItem.init();\r\n"]}