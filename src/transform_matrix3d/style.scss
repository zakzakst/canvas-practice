html {
  overflow: hidden;
}

.main {
  position: relative;
  height: 100vh;
  background: #fee;
  display: flex;
  align-items: center;
  justify-content: center;
}

// https://www.ajimatics.com/entry/2018/10/31/060000
.--item-1 {
  position: absolute;
  top: 30px;
  left: 30px;
  transform-origin: top left;
  // 2倍拡大
  // transform: matrix(2, 0, 0, 2, 0, 0);
  // 90°回転
  // transform: matrix(0, 1, 1, 0, 0, 0);
  // 組み合わせ
  transform: matrix(1, 2, 3, 4, 0, 0);
}

// https://www.htmq.com/css3/transform_matrix3d.shtml
.--item-2 {
  position: absolute;
  top: 30px;
  left: 30px;
  // 何も変形しない
  // transform: matrix3d(
  //   1, 0, 0, 0,
  //   0, 1, 0, 0,
  //   0, 0, 1, 0,
  //   0, 0, 0, 1
  // );
  // X方向に2倍、Y方向に3倍、Z方向に4倍
  // transform: matrix3d(
  //   2, 0, 0, 0,
  //   0, 3, 0, 0,
  //   0, 0, 4, 0,
  //   0, 0, 0, 1
  // );
  // X方向に20px移動、Y方向に30px移動、Z方向に40px移動
  // transform: matrix3d(
  //   1, 0, 0, 0,
  //   0, 1, 0, 0,
  //   0, 0, 1, 0,
  //   20, 30, 40, 1
  // );
  // X軸回転のみで、拡大縮小・平行移動をしない場合
  // $deg: 45deg;
  // transform: matrix3d(
  //   1, 0, 0, 0,
  //   0, cos($deg), sin(-$deg), 0,
  //   0, sin($deg), cos($deg), 0,
  //   0, 0, 0, 1
  // );
  // Y軸回転のみで、拡大縮小・平行移動をしない場合
  // $deg: 45deg;
  // transform: matrix3d(
  //   cos($deg), 0, sin($deg), 0,
  //   0, 1, 0, 0,
  //   sin(-$deg), 0, cos($deg), 0,
  //   0, 0, 0, 1
  // );
  // Z軸回転のみで、拡大縮小・平行移動をしない場合
  // $deg: 45deg;
  // transform: matrix3d(
  //   cos($deg), sin(-$deg), 0, 0,
  //   sin($deg), cos($deg), 0, 0,
  //   0, 0, 1, 0,
  //   0, 0, 0, 1
  // );
}

// X/Y軸回転のみで、拡大縮小・平行移動をしない場合
.item {
  width: 100px;
  height: 100px;
  border: 1px solid #000;
  position: relative;
  --rotateX: 45deg;
  --rotateY: 45deg;
  $x: 45deg;
  $y: 45deg;
  transform: matrix3d(
    1,        0,       0,        0,
    0,        cos($x), sin(-$x), 0,
    0,        sin($x), cos($x),  0,
    0,        0,       0,        1
  );
  transform: matrix3d(
    cos($y),  0,       sin($y),  0,
    0,        1,       0,        0,
    sin(-$y), 0,       cos($y),  0,
    0,        0,       0,        1
  );

  // X軸回転 * Y軸回転
  // transform: matrix3d(
  //   calc(
  //     1 * cos($y) +
  //     0 * 0 +
  //     0 * sin(-$y) +
  //     0 * 0
  //   ),
  //   calc(
  //     1 * 0 +
  //     0 * 1 +
  //     0 * 0 +
  //     0 * 0
  //   ),
  //   calc(
  //     1 * sin($y) +
  //     0 * 0 +
  //     0 * cos($y) +
  //     0 * 0
  //   ),
  //   calc(
  //     1 * 0 +
  //     0 * 0 +
  //     0 * 0 +
  //     0 * 1
  //   ),

  //   calc(
  //     0 * cos($y) +
  //     cos($x) * 0 +
  //     sin(-$x) * sin(-$y) +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     cos($x) * 1 +
  //     sin(-$x) * 0 +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * sin($y) +
  //     cos($x) * 0 +
  //     sin(-$x) * cos($y) +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     cos($x) * 0 +
  //     sin(-$x) * 0 +
  //     0 * 1
  //   ),

  //   calc(
  //     0 * sin($y) +
  //     sin($x) * 0 +
  //     cos($x) * cos($y) +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     sin($x) * 1 +
  //     cos($x) * 0 +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * sin($y) +
  //     sin($x) * 0 +
  //     cos($x) * cos($y) +
  //     0 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     sin($x) * 0 +
  //     cos($x) * 0 +
  //     0 * 1
  //   ),

  //   calc(
  //     0 * cos($y) +
  //     0 * 0 +
  //     0 * sin(-$y) +
  //     1 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     0 * 1 +
  //     0 * 0 +
  //     1 * 0
  //   ),
  //   calc(
  //     0 * sin($y) +
  //     0 * 0 +
  //     0 * cos($y) +
  //     1 * 0
  //   ),
  //   calc(
  //     0 * 0 +
  //     0 * 0 +
  //     0 * 0 +
  //     1 * 1
  //   ),
  // );
  // transform: rotateY($y) rotateX($x);

  // Y軸回転 * X軸回転
  transform: matrix3d(
    calc(
      cos($y) * 1 +
      0 * 0 +
      sin(-$y) * 0 +
      0 * 0
    ),
    calc(
      cos($y) * 0 +
      0 * cos($x) +
      sin(-$y) * sin(-$x) +
      0 * 0
    ),
    calc(
      cos($y) * 0 +
      0 * sin($x) +
      sin(-$y) * cos($x) +
      0 * 0
    ),
    calc(
      cos($y) * 0 +
      0 * 0 +
      sin(-$y) * 0 +
      0 * 0
    ),

    calc(
      0 * 1 +
      1 * 0 +
      0 * 0 +
      0 * 0
    ),
    calc(
      0 * 0 +
      1 * cos($x) +
      0 * sin(-$x) +
      0 * 0
    ),
    calc(
      0 * 0 +
      1 * sin($x) +
      0 * cos($x) +
      0 * 0
    ),
    calc(
      0 * 0 +
      1 * 0 +
      0 * 0 +
      0 * 1
    ),

    calc(
      sin($y) * 1 +
      0 * 0 +
      cos($y) * 0 +
      0 * 0
    ),
    calc(
      sin($y) * 0 +
      0 * cos($x) +
      cos($y) * sin(-$x) +
      0 * 0
    ),
    calc(
      sin($y) * 0 +
      0 * sin($x) +
      cos($y) * cos($x) +
      0 * 0
    ),
    calc(
      sin($y) * 0 +
      0 * 0 +
      cos($y) * 0 +
      0 * 1
    ),

    calc(
      0 * 1 +
      0 * 0 +
      0 * 0 +
      1 * 0
    ),
    calc(
      0 * 0 +
      0 * cos($x) +
      0 * sin(-$x) +
      1 * 0
    ),
    calc(
      0 * 0 +
      0 * sin($x) +
      0 * cos($x) +
      1 * 0
    ),
    calc(
      0 * 0 +
      0 * 0 +
      0 * 0 +
      1 * 1
    )
  );
  transform: rotateX($x) rotateY($y);

  > .bar {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    backface-visibility: visible;
    &.--x {
      background: #f00;
      width: 100%;
      height: 2px;
    }
    &.--y {
      background: #00f;
      width: 2px;
      height: 100%;
    }
  }
}
